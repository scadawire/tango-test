---
include:
  - project: 'tango-controls/gitlab-ci-templates'
    file: 'ArchiveWithSubmodules.gitlab-ci.yml'
  - project: 'tango-controls/gitlab-ci-templates'
    file: 'cpp.gitlab-ci.yml'

variables:
  TANGO_VERSION: 9.4.1
  MSVC_VERSION: v141
  GENERATOR_VERSION: Visual Studio 17 2022
  DEPS_PATH: C:/dependencies
  LIBTANGO: libtango_${TANGO_VERSION}_${MSVC_VERSION}_${ARCH}_static_release
  TANGO_PATH: ${DEPS_PATH}/${LIBTANGO}
  DEBIAN_FRONTEND: noninteractive
  GIT_SUBMODULE_STRATEGY: recursive

# See: https://docs.gitlab.com/ce/ci/yaml/README.html#workflowrules-templates
workflow:
  rules:
    - if: $CI_MERGE_REQUEST_IID
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

.build-tangotest-win:
  rules:
    - if: '$ARCH == "x64"'
      variables:
        DOWNLOAD_URL: "https://gitlab.com/tango-controls/cppTango/-/package_files/67360212/download"
    - if: '$ARCH == "x86"'
      variables:
        DOWNLOAD_URL: "https://gitlab.com/tango-controls/cppTango/-/package_files/67361143/download"
  before_script:
    - choco install cmake curl -y
    - if (Test-Path "${DEPS_PATH}") { Remove-Item "${DEPS_PATH}" -Recurse -Force; }
    - New-Item "${DEPS_PATH}" -ItemType Directory
      # See LIBTANGO constant at the top for the exact name
    - curl.exe -qLS "${DOWNLOAD_URL}" -o "${DEPS_PATH}/download"
    - 7z x "${DEPS_PATH}/download" -o"${DEPS_PATH}"
  script:
    - New-Item build -ItemType Directory
    - cd build
    - cmake -G"${GENERATOR_VERSION}" -A"${PLATFORM}" .. -DTango_ROOT="${TANGO_PATH}" -DTango_FORCE_STATIC=ON
    - cmake --build . --config Release
    - cmake --install .
  after_script:
    - New-Item artifacts -ItemType Directory
    - if (Test-Path "C:\Program Files\TangoTest\bin") { Move-Item -Path "C:\Program Files\TangoTest\bin\TangoTest.exe" -Destination "artifacts\TangoTest-x64.exe"; }
    - if (Test-Path "C:\Program Files (x86)\TangoTest\bin") { Move-Item -Path "C:\Program Files (x86)\TangoTest\bin\TangoTest.exe" -Destination "artifacts\TangoTest-x86.exe"; }
  artifacts:
    paths:
      - artifacts
    expire_in: 1 day
  tags:
    - saas-windows-medium-amd64

build-tangotest-win-64bit:
  extends: .build-tangotest-win
  variables:
    ARCH: x64
    PLATFORM: x64

build-tangotest-win-32bit:
  extends: .build-tangotest-win
  variables:
    ARCH: x86
    PLATFORM: Win32

# .build-tangotest-linux:
#   image: debian:bullseye
#   tags:
#     - docker, linux, amd64
#   before_script:
#     - apt-get update
#     - >
#       apt-get install -y
#       build-essential
#       cmake
#       git
#       libcos4-dev
#       libomniorb4-dev
#       libomnithread4-dev
#       libzmq3-dev
#       omniidl
#       pkg-config
#     - mkdir build
#
# build-tangotest-linux-main-newest-supported-cmake:
#   extends: .build-tangotest-linux
#   script:
#     # Extract tango
#     - tar xf usr-local.tar -C /
#     # Install custom cmake
#     - apt-get install curl
#     - apt-get remove -y cmake
#     - curl -L https://cmake.org/files/v3.26/cmake-3.26.4-linux-x86_64.sh -o /tmp/cmake-install.sh
#     - chmod +x /tmp/cmake-install.sh
#     - cd /usr/local
#     - /tmp/cmake-install.sh --skip-license --exclude-subdir
#     # Build DS
#     - cd ${CI_PROJECT_DIR}
#     - cmake -Werror=dev -DTANGO_WARNINGS_AS_ERRORS=ON -B build .
#     - make -C build install
#
# build-tangotest-linux-main-oldest-supported-cmake:
#   extends: .build-tangotest-linux
#   script:
#     # Extract tango
#     - tar xf usr-local.tar -C /
#     # Install custom cmake
#     - apt-get install curl
#     - apt-get remove -y cmake
#     - curl -L https://cmake.org/files/v3.18/cmake-3.18.6-Linux-x86_64.sh -o /tmp/cmake-install.sh
#     - chmod +x /tmp/cmake-install.sh
#     - cd /usr/local
#     - /tmp/cmake-install.sh --skip-license --exclude-subdir
#     # Build DS
#     - cd ${CI_PROJECT_DIR}
#     - cmake -Werror=dev -DTANGO_WARNINGS_AS_ERRORS=ON -B build .
#     - make -C build install

release-builds:
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  tags:
    - docker, linux, amd64
  needs:
    - build-tangotest-win-32bit
    - build-tangotest-win-64bit
    - build-linux
  variables:
    # WARNING! This variable name is used in ArchiveWithSubmodules.gitlab-ci.yml template
    PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${CI_PROJECT_NAME}"
  before_script:
    - apk update
    - apk add curl
    - apk --no-cache add findutils
  script:
    - cd artifacts
    - >
      find . -type f -printf "%f\n" -exec curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file {} "${PACKAGE_REGISTRY_URL}/${CI_COMMIT_TAG}/{}" \;
  release:
    name: 'Release $CI_COMMIT_TAG'
    tag_name: '$CI_COMMIT_TAG'
    description: 'Release $CI_COMMIT_TAG'
    ref: '$CI_COMMIT_SHA'
    assets:
      links:
        - name: 'TangoTest-x64.exe'
          url: "${PACKAGE_REGISTRY_URL}/${CI_COMMIT_TAG}/TangoTest-x64.exe"
        - name: 'TangoTest-x86.exe'
          url: "${PACKAGE_REGISTRY_URL}/${CI_COMMIT_TAG}/TangoTest-x86.exe"
  rules:
    - if: $CI_COMMIT_TAG
      when: on_success
